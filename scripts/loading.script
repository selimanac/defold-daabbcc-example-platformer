local const          = require("scripts.lib.const")
local data           = require("scripts.lib.data")
local device         = require("scripts.lib.device")

local orientation_id = nil

function init(_)
	data.game.is_mobile = device.mobile() or device.tablet()
	data.window_scale = window.get_display_scale()

	-- Very lazy way for mobile camera bounds
	if data.game.is_mobile then
		const.CAMERA.BOUNDS_MIN = const.CAMERA.MOBILE_BOUNDS_MIN
		const.CAMERA.BOUNDS_MAX = const.CAMERA.MOBILE_BOUNDS_MAX
	end

	----------------------
	-- defos
	----------------------
	-- defos is not included in HTML5 build
	if defos then
		if not defos.is_fullscreen() then
			if sys.get_sys_info().system_name == "Darwin" then
				defos.borderless_fullscreen() -- <-- Added
				--defos.set_borderless(true) -- <- this prevent focus on Macos
				--defos.activate() -- <- this doesn't focus on Macos when it is borderless
			else
				-- I have no idea if focus works on other platforms
				defos.toggle_fullscreen()
				defos.set_borderless(true)
				defos.activate()
			end
		end
	end

	msg.post(const.PROXY, "async_load")
end

function on_message(_, message_id, _, _)
	if message_id == data.proxy.msg.proxy_loaded then
		data.proxy.loaded = true

		msg.post(const.PROXY, "init")
		msg.post(data.proxy.gui, data.proxy.msg.enable_game)
		msg.post(const.PROXY, "acquire_input_focus")
	elseif message_id == data.proxy.msg.guy_removed then
		go.delete(data.proxy.gui_container, true)

		msg.post(const.PROXY, "enable")
	elseif message_id == const.MSG.LANDSCAPE_PAUSE then
		if orientation_id == nil then
			orientation_id = factory.create(const.PROXY_ORIENTATION_FACTORY)
		else
			go.delete(orientation_id)
			orientation_id = nil
		end
	end
end
